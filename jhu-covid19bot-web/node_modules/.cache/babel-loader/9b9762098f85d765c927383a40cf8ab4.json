{"remainingRequest":"/Users/arpansahoo/Documents/GitHub/JHU-COVID-QA.github.io/jhu-covid19bot-web/node_modules/babel-loader/lib/index.js!/Users/arpansahoo/Documents/GitHub/JHU-COVID-QA.github.io/jhu-covid19bot-web/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/arpansahoo/Documents/GitHub/JHU-COVID-QA.github.io/jhu-covid19bot-web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/arpansahoo/Documents/GitHub/JHU-COVID-QA.github.io/jhu-covid19bot-web/src/Components/Parts/ChatInput.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/arpansahoo/Documents/GitHub/JHU-COVID-QA.github.io/jhu-covid19bot-web/src/Components/Parts/ChatInput.vue","mtime":1585251137235},{"path":"/Users/arpansahoo/Documents/GitHub/JHU-COVID-QA.github.io/jhu-covid19bot-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/arpansahoo/Documents/GitHub/JHU-COVID-QA.github.io/jhu-covid19bot-web/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/arpansahoo/Documents/GitHub/JHU-COVID-QA.github.io/jhu-covid19bot-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/arpansahoo/Documents/GitHub/JHU-COVID-QA.github.io/jhu-covid19bot-web/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMucmVnZXhwLmV4ZWMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5zdHJpbmcucmVwbGFjZSI7Ci8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCndpbmRvdy5NZWRpYVJlY29yZGVyID0gcmVxdWlyZSgnYXVkaW8tcmVjb3JkZXItcG9seWZpbGwnKTsKZXhwb3J0IGRlZmF1bHQgewogIG5hbWU6ICdDaGF0SW5wdXQnLAogIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBxdWVyeTogJycsCiAgICAgIG1pY3JvcGhvbmU6IGZhbHNlLAogICAgICByZWNvZ25pdGlvbjogbnVsbCwKICAgICAgcmVjb3JkZXI6IG51bGwsCiAgICAgIHNob3VsZF9saXN0ZW46IHRydWUKICAgIH07CiAgfSwKICBjb21wdXRlZDogewogICAgLyogSGVscGVyIGZ1bmN0aW9uIHRvIGRlY2lkZSwgd2hldGhlciBhbGxvdyBtaWNyb3Bob25lIGlucHV0ICovCiAgICBtaWNyb3Bob25lX2FsbG93ZWQ6IGZ1bmN0aW9uIG1pY3JvcGhvbmVfYWxsb3dlZCgpIHsKICAgICAgaWYgKHRoaXMucmVjb2duaXRpb24gfHwgdGhpcy5yZWNvcmRlcikgcmV0dXJuIHRydWU7CiAgICAgIHJldHVybiBmYWxzZTsKICAgIH0KICB9LAogIHdhdGNoOiB7CiAgICAvKiBUb2dnbGUgbWljcm9waG9uZSAqLwogICAgbWljcm9waG9uZTogZnVuY3Rpb24gbWljcm9waG9uZShhY3RpdmF0ZSkgewogICAgICBpZiAoYWN0aXZhdGUpIHsKICAgICAgICB0aGlzLnNob3VsZF9saXN0ZW4gPSB0cnVlOwoKICAgICAgICBpZiAodGhpcy5yZWNvZ25pdGlvbikgewogICAgICAgICAgdGhpcy5yZWNvZ25pdGlvbi5sYW5nID0gdGhpcy5sYW5nKCk7CiAgICAgICAgICB0aGlzLnJlY29nbml0aW9uLnN0YXJ0KCk7CiAgICAgICAgfSBlbHNlIGlmICh0aGlzLnJlY29yZGVyKSB0aGlzLnJlY29yZGVyLnN0YXJ0KCk7CiAgICAgIH0gZWxzZSBpZiAodGhpcy5yZWNvZ25pdGlvbikgdGhpcy5yZWNvZ25pdGlvbi5hYm9ydCgpO2Vsc2UgaWYgKHRoaXMucmVjb3JkZXIpIHRoaXMucmVjb3JkZXIuc3RvcCgpOwogICAgfQogIH0sCiAgY3JlYXRlZDogZnVuY3Rpb24gY3JlYXRlZCgpIHsKICAgIHZhciBfdGhpcyA9IHRoaXM7CgogICAgLyogU2V0IHVwIHJlY29nbml0aW9uICovCiAgICBpZiAod2luZG93LndlYmtpdFNwZWVjaFJlY29nbml0aW9uIHx8IHdpbmRvdy5TcGVlY2hSZWNvZ25pdGlvbikgewogICAgICB0aGlzLnJlY29nbml0aW9uID0gbmV3IHdpbmRvdy53ZWJraXRTcGVlY2hSZWNvZ25pdGlvbigpIHx8IG5ldyB3aW5kb3cuU3BlZWNoUmVjb2duaXRpb24oKTsKICAgICAgdGhpcy5yZWNvZ25pdGlvbi5pbnRlcmltUmVzdWx0cyA9IHRydWU7CgogICAgICB0aGlzLnJlY29nbml0aW9uLm9ucmVzdWx0ID0gZnVuY3Rpb24gKGV2ZW50KSB7CiAgICAgICAgZm9yICh2YXIgaSA9IGV2ZW50LnJlc3VsdEluZGV4OyBpIDwgZXZlbnQucmVzdWx0cy5sZW5ndGg7ICsraSkgewogICAgICAgICAgX3RoaXMucXVlcnkgPSBldmVudC5yZXN1bHRzW2ldWzBdLnRyYW5zY3JpcHQ7IC8vIDwtIHB1c2ggcmVzdWx0cyB0byB0aGUgVGV4dCBpbnB1dAogICAgICAgIH0KICAgICAgfTsKCiAgICAgIHRoaXMucmVjb2duaXRpb24ub25lbmQgPSBmdW5jdGlvbiAoKSB7CiAgICAgICAgX3RoaXMucmVjb2duaXRpb24uc3RvcCgpOwoKICAgICAgICBfdGhpcy5taWNyb3Bob25lID0gZmFsc2U7CgogICAgICAgIF90aGlzLnN1Ym1pdCh7CiAgICAgICAgICB0ZXh0OiBfdGhpcy5xdWVyeQogICAgICAgIH0pOyAvLyA8LSBzdWJtaXQgdGhlIHJlc3VsdAoKICAgICAgfTsKICAgIH0KICAgIC8qIFNldCB1cCByZWNvcmRlciAqLwogICAgZWxzZSBpZiAod2luZG93Lk1lZGlhUmVjb3JkZXIpIHsKICAgICAgICBuYXZpZ2F0b3IubWVkaWFEZXZpY2VzLmdldFVzZXJNZWRpYSh7CiAgICAgICAgICBhdWRpbzogdHJ1ZQogICAgICAgIH0pLnRoZW4oZnVuY3Rpb24gKHN0cmVhbSkgewogICAgICAgICAgX3RoaXMucmVjb3JkZXIgPSBuZXcgd2luZG93Lk1lZGlhUmVjb3JkZXIoc3RyZWFtKTsKCiAgICAgICAgICBfdGhpcy5yZWNvcmRlci5hZGRFdmVudExpc3RlbmVyKCdkYXRhYXZhaWxhYmxlJywgZnVuY3Rpb24gKHJlY29yZGluZykgewogICAgICAgICAgICB2YXIgcmVhZGVyID0gbmV3IEZpbGVSZWFkZXIoKTsKICAgICAgICAgICAgcmVhZGVyLnJlYWRBc0RhdGFVUkwocmVjb3JkaW5nLmRhdGEpOwoKICAgICAgICAgICAgcmVhZGVyLm9ubG9hZGVuZCA9IGZ1bmN0aW9uICgpIHsKICAgICAgICAgICAgICBfdGhpcy5zdWJtaXQoewogICAgICAgICAgICAgICAgYXVkaW86IHJlYWRlci5yZXN1bHQucmVwbGFjZSgvXmRhdGE6Lis7YmFzZTY0LC8sICcnKQogICAgICAgICAgICAgIH0pOwogICAgICAgICAgICB9OwogICAgICAgICAgfSk7CiAgICAgICAgfSk7CiAgICAgIH0KICB9LAogIG1ldGhvZHM6IHsKICAgIGxpc3RlbjogZnVuY3Rpb24gbGlzdGVuKCkgewogICAgICBpZiAodGhpcy5zaG91bGRfbGlzdGVuKSB0aGlzLm1pY3JvcGhvbmUgPSB0cnVlOwogICAgfSwKICAgIHN1Ym1pdDogZnVuY3Rpb24gc3VibWl0KHN1Ym1pc3Npb24pIHsKICAgICAgaWYgKHN1Ym1pc3Npb24udGV4dCAmJiBzdWJtaXNzaW9uLnRleHQubGVuZ3RoID4gMCkgewogICAgICAgIHRoaXMuJGVtaXQoJ3N1Ym1pdCcsIHN1Ym1pc3Npb24pOwogICAgICAgIHRoaXMucXVlcnkgPSAnJzsKICAgICAgfSBlbHNlIGlmIChzdWJtaXNzaW9uLmF1ZGlvKSB0aGlzLiRlbWl0KCdzdWJtaXQnLCBzdWJtaXNzaW9uKTsKICAgIH0KICB9Cn07"},{"version":3,"sources":["ChatInput.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n    <div class=\"bottomchat\">\n        <div class=\"container\">\n            <!-- Here are the suggestions -->\n            <div class=\"suggestions\"><slot /></div>\n            <div class=\"flexible\">\n                <!-- Text input -->\n                <input\n                    v-model=\"query\"\n                    class=\"input\"\n                    type=\"text\"\n                    autofocus\n                    :placeholder=\"(translations[lang()] && translations[lang()].inputTitle) || translations[config.fallback_lang].inputTitle\"\n                    :aria-label=\"(translations[lang()] && translations[lang()].inputTitle) || translations[config.fallback_lang].inputTitle\"\n                    @keypress.enter=\"submit({text: query})\"\n                    @focus=\"microphone = false; should_listen = false\">\n\n                <!-- Send message button (arrow button) -->\n                <button\n                    v-if=\"!microphone && query.length > 0 || !microphone_allowed\"\n                    class=\"button\"\n                    :title=\"(translations[lang()] && translations[lang()].sendTitle) || translations[config.fallback_lang].sendTitle\"\n                    :aria-label=\"(translations[lang()] && translations[lang()].sendTitle) || translations[config.fallback_lang].sendTitle\"\n                    @click=\"submit({text: query})\">\n                    <i class=\"material-icons\" aria-hidden=\"true\">arrow_upward</i>\n                </button>\n\n                <!-- Microphone Button -->\n                <button\n                    v-else\n                    class=\"button\"\n                    :aria-label=\"(translations[lang()] && translations[lang()].microphoneTitle) || translations[config.fallback_lang].microphoneTitle\"\n                    :title=\"(translations[lang()] && translations[lang()].microphoneTitle) || translations[config.fallback_lang].microphoneTitle\"\n                    :class=\"{'mic_active': microphone}\"\n                    @click=\"microphone = !microphone\">\n                    <i class=\"material-icons\" aria-hidden=\"true\">mic</i>\n                </button>\n            </div>\n        </div>\n    </div>\n</template>\n\n<style lang=\"sass\" scoped>\n@import '@/Style/Mixins'\n\n.bottomchat\n    position: fixed\n    bottom: 0\n    left: 0\n    width: 100%\n    background-color: var(--background)\n    padding-bottom: 8px\n\n.flexible\n    display: flex\n\n.suggestions\n    overflow-x: scroll\n    overflow-y: hidden\n    white-space: nowrap\n    -webkit-overflow-scrolling: touch\n\n    &::-webkit-scrollbar\n        display: none\n\n.input\n    font-size: 16px\n    font-weight: 500\n    width: 100%\n    box-sizing: border-box\n    border: none\n    padding: 10px 12px\n    color: var(--text)\n    border-radius: 40px\n    flex: 1 0 0\n    background-color: var(--element-background)\n\n    &:focus\n        outline: 0 !important\n\n.button\n    @include reset\n    padding: 8px\n    margin-left: 6px\n    border-radius: 50%\n    cursor: pointer\n    background-color: var(--element-background)\n    color: var(--text)\n    font-size: 24px\n    display: flex\n\n    &:focus\n        outline: 0 !important\n\n    &.mic_active\n        background-color: #F44336\n        color: white\n</style>\n\n<script>\nwindow.MediaRecorder = require('audio-recorder-polyfill')\nexport default {\n    name: 'ChatInput',\n    data(){\n        return {\n            query: '',\n            microphone: false,\n            recognition: null,\n            recorder: null,\n            should_listen: true\n        }\n    },\n    computed: {\n        /* Helper function to decide, whether allow microphone input */\n        microphone_allowed(){\n            if (this.recognition || this.recorder) return true\n            return false\n        }\n    },\n    watch: {\n        /* Toggle microphone */\n        microphone(activate){\n            if (activate){\n                this.should_listen = true\n                if (this.recognition){\n                    this.recognition.lang = this.lang()\n                    this.recognition.start()\n                }\n\n                else if (this.recorder) this.recorder.start()\n            }\n\n            else if (this.recognition) this.recognition.abort()\n            else if (this.recorder) this.recorder.stop()\n        }\n    },\n    created(){\n        /* Set up recognition */\n        if (window.webkitSpeechRecognition || window.SpeechRecognition){\n            this.recognition = new window.webkitSpeechRecognition() || new window.SpeechRecognition()\n            this.recognition.interimResults = true\n            this.recognition.onresult = event => {\n                for (let i = event.resultIndex; i < event.results.length; ++i){\n                    this.query = event.results[i][0].transcript // <- push results to the Text input\n                }\n            }\n\n            this.recognition.onend = () => {\n                this.recognition.stop()\n                this.microphone = false\n                this.submit({text: this.query}) // <- submit the result\n            }\n        }\n\n        /* Set up recorder */\n        else if (window.MediaRecorder){\n            navigator.mediaDevices.getUserMedia({audio: true})\n            .then(stream => {\n                this.recorder = new window.MediaRecorder(stream)\n                this.recorder.addEventListener('dataavailable', recording => {\n                    const reader = new FileReader()\n                    reader.readAsDataURL(recording.data)\n                    reader.onloadend = () => {\n                        this.submit({audio: reader.result.replace(/^data:.+;base64,/, '')})\n                    }\n                })\n            })\n        }\n    },\n    methods: {\n        listen(){\n            if (this.should_listen) this.microphone = true\n        },\n        submit(submission){\n            if (submission.text && submission.text.length > 0){\n                this.$emit('submit', submission)\n                this.query = ''\n            }\n\n            else if (submission.audio) this.$emit('submit', submission)\n        }\n    }\n}\n</script>"],"sourceRoot":"src/Components/Parts"}]}