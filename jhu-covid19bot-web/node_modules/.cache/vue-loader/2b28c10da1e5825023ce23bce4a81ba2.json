{"remainingRequest":"/Users/arpansahoo/Documents/GitHub/JHU-COVID-QA.github.io/jhu-covid19bot-web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/arpansahoo/Documents/GitHub/JHU-COVID-QA.github.io/jhu-covid19bot-web/src/Views/App.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/arpansahoo/Documents/GitHub/JHU-COVID-QA.github.io/jhu-covid19bot-web/src/Views/App.vue","mtime":1585251137236},{"path":"/Users/arpansahoo/Documents/GitHub/JHU-COVID-QA.github.io/jhu-covid19bot-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/arpansahoo/Documents/GitHub/JHU-COVID-QA.github.io/jhu-covid19bot-web/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/arpansahoo/Documents/GitHub/JHU-COVID-QA.github.io/jhu-covid19bot-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/arpansahoo/Documents/GitHub/JHU-COVID-QA.github.io/jhu-covid19bot-web/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["App.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2QA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA","file":"App.vue","sourceRoot":"src/Views","sourcesContent":["<template>\n    <main id=\"app\">\n        <!-- TopHead is the header with the information about the app -->\n        <TopHead v-if=\"app && messages.length > 0\" :app=\"app\">\n            <!-- Audio toggle (on the top right corner), used to toggle the audio output, default mode is defined in the settings -->\n            <button\n                class=\"audio-toggle\"\n                :title=\"muted ? (translations[lang()] && translations[lang()].unMuteTitle) || translations[config.fallback_lang].unMuteTitle : (translations[lang()] && translations[lang()].muteTitle) || translations[config.fallback_lang].muteTitle\"\n                :aria-label=\"muted ? (translations[lang()] && translations[lang()].unMuteTitle) || translations[config.fallback_lang].unMuteTitle : (translations[lang()] && translations[lang()].muteTitle) || translations[config.fallback_lang].muteTitle\"\n                @click=\"muted = !muted\">\n                <i aria-hidden=\"true\" class=\"material-icons\">{{muted ? 'volume_off': 'volume_up'}}</i>\n            </button>\n        </TopHead>\n        <section class=\"container chat-container\">\n            <!-- Error component is for displaying errors -->\n            <Error v-if=\"error\" :error=\"error\" />\n\n            <!-- Welcome component is for onboarding experience and language picker -->\n            <Welcome v-if=\"app && messages.length == 0\" :app=\"app\" />\n\n            <!-- Messages Table -->\n            <section v-else aria-live=\"polite\">\n                <div v-for=\"m in messages\" id=\"message\" :key=\"m.responseId\">\n                    <!-- My message -->\n                    <BubbleWrapper><Bubble v-if=\"m.queryResult.queryText\" :text=\"m.queryResult.queryText\" me /></BubbleWrapper>\n\n                    <!-- Dialogflow Components -->\n                    <RichComponent v-for=\"(component, id) in m.queryResult.fulfillmentMessages\" :key=\"id\">\n                        <!-- Text (https://cloud.google.com/dialogflow/docs/reference/rest/v2beta1/projects.agent.intents#Text) -->\n                        <Bubble v-if=\"component.text\" :text=\"component.text.text[0]\" />\n\n                        <!-- SimpleResponses (https://cloud.google.com/dialogflow/docs/reference/rest/v2beta1/projects.agent.intents#SimpleResponses) -->\n                        <Bubble\n                            v-if=\"component.simpleResponses\"\n                            :text=\"component.simpleResponses.simpleResponses[0].displayText || component.simpleResponses.simpleResponses[0].textToSpeech\"\n                        />\n\n                        <!-- Card (https://cloud.google.com/dialogflow/docs/reference/rest/v2beta1/projects.agent.intents#Card) -->\n                        <Card\n                            v-if=\"component.card\"\n                            :title=\"component.card.title\"\n                            :subtitle=\"component.card.subtitle\"\n                            :image-uri=\"component.card.imageUri\">\n                            <CardButton\n                                v-for=\"button in component.card.buttons\"\n                                :key=\"button.text\"\n                                :uri=\"button.postback\"\n                                :title=\"button.text\"\n                            />\n                        </Card>\n\n                        <!-- BasicCard (https://cloud.google.com/dialogflow/docs/reference/rest/v2beta1/projects.agent.intents#BasicCard) -->\n                        <Card\n                            v-if=\"component.basicCard\"\n                            :title=\"component.basicCard.title\"\n                            :subtitle=\"component.basicCard.subtitle\"\n                            :image-uri=\"component.basicCard.image.imageUri\"\n                            :image-title=\"component.basicCard.image.accessibilityText\"\n                            :text=\"component.basicCard.formattedText\">\n                            <CardButton\n                                v-for=\"button in component.basicCard.buttons\"\n                                :key=\"button.title\"\n                                :uri=\"button.openUriAction.uri\"\n                                :title=\"button.title\"\n                            />\n                        </Card>\n\n                        <!-- CarouselSelect (https://cloud.google.com/dialogflow/docs/reference/rest/v2beta1/projects.agent.intents#CarouselSelect) -->\n                        <Carousel v-if=\"component.carouselSelect\">\n                            <Card\n                                v-for=\"item in component.carouselSelect.items\"\n                                :key=\"item.info.key\"\n                                :title=\"item.title\"\n                                :image-uri=\"item.image.imageUri\"\n                                :image-title=\"item.image.accessibilityText\"\n                                :text=\"item.description\"\n                                @click.native=\"send({text: item.info.key})\"\n                            />\n                        </Carousel>\n\n                        <!-- ListSelect (https://cloud.google.com/dialogflow/docs/reference/rest/v2beta1/projects.agent.intents#ListSelect) -->\n                        <List\n                            v-if=\"component.listSelect\"\n                            :title=\"component.listSelect.title\"\n                            :subtitle=\"component.listSelect.subtitle\">\n                            <ListItem\n                                v-for=\"item in component.listSelect.items\"\n                                :key=\"item.title\"\n                                :title=\"item.title\"\n                                :description=\"item.description\"\n                                :image-uri=\"item.image.imageUri\"\n                                :image-title=\"item.image.accessibilityText\"\n                                @click.native=\"send({text: item.info.key})\"\n                            />\n                        </List>\n\n                        <!-- Image (https://cloud.google.com/dialogflow/docs/reference/rest/v2beta1/projects.agent.intents#Image) -->\n                        <Picture v-if=\"component.image\" :uri=\"component.image.imageUri\" :title=\"component.image.accessibilityText\" />\n                    </RichComponent>\n\n                    <!-- Actions on Google Components -->\n                    <section v-if=\"m.queryResult.webhookPayload && m.queryResult.webhookPayload.google\">\n                        <RichComponent v-for=\"(component, id) in m.queryResult.webhookPayload.google.richResponse.items\" :key=\"id\">\n                            <!-- Simple response (https://developers.google.com/actions/assistant/responses#simple_response) -->\n                            <Bubble\n                                v-if=\"component.simpleResponse\"\n                                :text=\"component.simpleResponse.displayText || component.simpleResponse.textToSpeech\"\n                            />\n\n                            <!-- Basic card (https://developers.google.com/actions/assistant/responses#basic_card) -->\n                            <Card\n                                v-if=\"component.basicCard\"\n                                :title=\"component.basicCard.title\"\n                                :subtitle=\"component.basicCard.subtitle\"\n                                :image-uri=\"component.basicCard.image.url\"\n                                :image-title=\"component.basicCard.image.accessibilityText\"\n                                :text=\"component.basicCard.formattedText\">\n                                <CardButton\n                                    v-for=\"button in component.basicCard.buttons\"\n                                    :key=\"button.title\"\n                                    :uri=\"button.openUrlAction.url\"\n                                    :title=\"button.title\"\n                                />\n                            </Card>\n\n                            <!-- Browsing Carousel (https://developers.google.com/actions/assistant/responses#browsing_carousel) -->\n                            <List v-if=\"component.carouselBrowse\">\n                                <ListItem\n                                    v-for=\"item in component.carouselBrowse.items\"\n                                    :key=\"item.title\"\n                                    :uri=\"item.openUrlAction.url\"\n                                    :title=\"item.title\"\n                                    :description=\"item.description\"\n                                    :footer=\"item.footer\"\n                                    :image-uri=\"item.image.url\"\n                                    :image-title=\"item.image.accessibilityText\"\n                                />\n                            </List>\n\n                            <!-- Media responses (https://developers.google.com/actions/assistant/responses#media_responses) -->\n                            <div v-if=\"component.mediaResponse && component.mediaResponse.mediaObjects\">\n                                <Media\n                                    v-for=\"media in component.mediaResponse.mediaObjects\"\n                                    :key=\"media.name\"\n                                    :name=\"media.name\"\n                                    :description=\"media.description\"\n                                    :icon-uri=\"media.icon.url\"\n                                    :icon-title=\"media.icon.accessibilityText\"\n                                    :uri=\"media.contentUrl\"\n                                />\n                            </div>\n\n                            <!-- Table cards (https://developers.google.com/actions/assistant/responses#table_cards) -->\n                            <TableCard\n                                v-if=\"component.tableCard\"\n                                :title=\"component.tableCard.title\"\n                                :subtitle=\"component.tableCard.subtitle\"\n                                :image-uri=\"component.tableCard.image.url\"\n                                :image-title=\"component.tableCard.image.accessibilityText\"\n                                :header=\"component.tableCard.columnProperties\"\n                                :rows=\"component.tableCard.rows\">\n                                <CardButton\n                                    v-for=\"button in component.tableCard.buttons\"\n                                    :key=\"button.title\"\n                                    :uri=\"button.openUrlAction.url\"\n                                    :title=\"button.title\"\n                                />\n                            </TableCard>\n                        </RichComponent>\n\n                        <!-- Visual Selection Responses (https://developers.google.com/actions/assistant/responses#visual_selection_responses) -->\n                        <RichComponent v-for=\"(component, id) in m.queryResult.webhookPayload.google.systemIntent\" :key=\"id\">\n                            <!-- List (https://developers.google.com/actions/assistant/responses#list) -->\n                            <List\n                                v-if=\"component.listSelect\"\n                                :title=\"component.listSelect.title\"\n                                :subtitle=\"component.listSelect.subtitle\">\n                                <ListItem\n                                    v-for=\"item in component.listSelect.items\"\n                                    :key=\"item.optionInfo.key\"\n                                    :title=\"item.title\"\n                                    :description=\"item.description\"\n                                    :image-uri=\"item.image.url\"\n                                    :image-title=\"item.image.accessibilityText\"\n                                    @click.native=\"send({text: item.optionInfo.key})\"\n                                />\n                            </List>\n\n                            <!-- Carousel (https://developers.google.com/actions/assistant/responses#carousel) -->\n                            <Carousel v-if=\"component.carouselSelect\">\n                                <Card\n                                    v-for=\"item in component.carouselSelect.items\"\n                                    :key=\"item.optionInfo.key\"\n                                    :title=\"item.title\"\n                                    :image-uri=\"item.image.url\"\n                                    :image-title=\"item.image.accessibilityText\"\n                                    :text=\"item.description\"\n                                    @click.native=\"send({text: item.optionInfo.key})\"\n                                />\n                            </Carousel>\n                        </RichComponent>\n                    </section>\n                </div>\n                <div v-if=\"loading\" id=\"message\">\n                    <!-- My message (Loading) -->\n                    <BubbleWrapper><Bubble me loading aria-hidden=\"true\" /></BubbleWrapper>\n\n                    <!-- Default / Webhook bubble (Loading) -->\n                    <Bubble loading aria-hidden=\"true\" />\n                </div>\n            </section>\n        </section>\n\n        <!-- ChatInput is made for submitting queries and displaying suggestions -->\n        <ChatInput ref=\"input\" @submit=\"send\">\n            <!-- Suggestion chips\n                https://developers.google.com/actions/assistant/responses#suggestion_chips\n                https://cloud.google.com/dialogflow/docs/reference/rest/v2beta1/projects.agent.intents#QuickReplies\n                https://cloud.google.com/dialogflow/docs/reference/rest/v2beta1/projects.agent.intents#Suggestions\n            -->\n            <span v-if=\"suggestions.text_suggestions\">\n                <Suggestion\n                    v-for=\"(suggestion, index) in suggestions.text_suggestions\"\n                    :key=\"index\"\n                    :title=\"suggestion\"\n                    @click.native=\"send({text: suggestion})\"\n                />\n            </span>\n\n            <!-- Link suggestion chips\n                https://developers.google.com/actions/assistant/responses#suggestion_chips\n                https://cloud.google.com/dialogflow/docs/reference/rest/v2beta1/projects.agent.intents#LinkOutSuggestion\n            -->\n            <Suggestion\n                v-if=\"suggestions.link_suggestion\"\n                :title=\"suggestions.link_suggestion.destinationName\"\n                :url=\"suggestions.link_suggestion.uri || suggestions.link_suggestion.url\"\n            />\n        </ChatInput>\n    </main>\n</template>\n\n<style lang=\"sass\">\n@import '@/Style/Theme.sass'\n\nbody\n    margin: 0\n    padding: 0\n    font-family: var(--font)\n    font-display: swap\n    background-color: var(--background)\n\n.container\n    max-width: 500px\n    margin-left: auto\n    margin-right: auto\n    padding: 12px\n    position: relative\n</style>\n\n<style lang=\"sass\" scoped>\n.chat-container\n    padding-top: 80px\n    padding-bottom: 125px\n</style>\n\n<script>\nimport Welcome from './Welcome.vue'\n\nimport Error from '@/Components/Parts/Error.vue'\nimport TopHead from '@/Components/Parts/TopHead.vue'\nimport ChatInput from '@/Components/Parts/ChatInput.vue'\n\nimport RichComponent from '@/Components/Rich/Component.vue'\nimport Bubble from '@/Components/Rich/Bubble.vue'\nimport BubbleWrapper from '@/Components/Rich/BubbleWrapper.vue'\nimport Card from '@/Components/Rich/Card.vue'\nimport CardButton from '@/Components/Rich/CardButton.vue'\nimport Carousel from '@/Components/Rich/Carousel.vue'\nimport List from '@/Components/Rich/List.vue'\nimport ListItem from '@/Components/Rich/ListItem.vue'\nimport Picture from '@/Components/Rich/Picture.vue'\nimport Media from '@/Components/Rich/Media.vue'\nimport TableCard from '@/Components/Rich/TableCard.vue'\nimport Suggestion from '@/Components/Rich/Suggestion.vue'\n\nimport * as uuidv1 from 'uuid/v1'\n\nimport 'dialogflow-gateway/build/bundle'\n\nexport default {\n    name: 'App',\n    components: {\n        Welcome,\n        Error,\n        TopHead,\n        ChatInput,\n        RichComponent,\n        Bubble,\n        BubbleWrapper,\n        Card,\n        CardButton,\n        Carousel,\n        List,\n        ListItem,\n        Picture,\n        Media,\n        TableCard,\n        Suggestion\n    },\n    data(){\n        return {\n            app: null,\n            messages: [],\n            language: '',\n            session: '',\n            muted: true,\n            loading: false,\n            error: null,\n            client: new df.Client(this.config.gateway).connect()\n        }\n    },\n    computed: {\n        /* The code below is used to extract suggestions from last message, to display it on ChatInput */\n        suggestions(){\n            if (this.messages.length > 0){\n                const last_message = this.messages[this.messages.length - 1]\n                const suggestions = []\n\n                /* Dialogflow Suggestions */\n                for (const component in last_message.queryResult.fulfillmentMessages){\n                    if (last_message.queryResult.fulfillmentMessages[component].suggestions) suggestions.text_suggestions = last_message.queryResult.fulfillmentMessages[component].suggestions.suggestions.map(suggestion => suggestion.title)\n                    if (last_message.queryResult.fulfillmentMessages[component].linkOutSuggestion) suggestions.link_suggestion = last_message.queryResult.fulfillmentMessages[component].linkOutSuggestion\n                    if (last_message.queryResult.fulfillmentMessages[component].quickReplies) suggestions.text_suggestions = last_message.queryResult.fulfillmentMessages[component].quickReplies.quickReplies\n                }\n\n                /* Google Suggestions */\n                if (last_message.queryResult.webhookPayload && last_message.queryResult.webhookPayload.google){\n                    for (const component in last_message.queryResult.webhookPayload.google){\n                        if (last_message.queryResult.webhookPayload.google[component].suggestions) suggestions.text_suggestions = last_message.queryResult.webhookPayload.google[component].suggestions.map(suggestion => suggestion.title)\n                        if (last_message.queryResult.webhookPayload.google[component].linkOutSuggestion) suggestions.link_suggestion = last_message.queryResult.webhookPayload.google[component].linkOutSuggestion\n                    }\n                }\n\n                return suggestions\n            }\n\n            return {\n                text_suggestions: this.config.start_suggestions // <- if no messages are present, return start_suggestions, from config.js to help user figure out what he can do with your application\n            }\n        }\n    },\n    watch: {\n        /* This function is triggered, when new messages arrive */\n        messages(messages){\n            if (this.history()) sessionStorage.setItem('message_history', JSON.stringify(messages)) // <- Save history if the feature is enabled\n        },\n        /* This function is triggered, when request is started or finished */\n        loading(){\n            setTimeout(() => {\n                const app = document.querySelector('#app') // <- We need to scroll down #app, to prevent the whole page jumping to bottom, when using in iframe\n                if (app.querySelector('#message')){\n                    const message = app.querySelectorAll('#message')[app.querySelectorAll('#message').length - 1].offsetTop - 68\n                    window.scrollTo({top: message, behavior: 'smooth'})\n                }\n            }, 2) // <- wait for render (timeout) and then smoothly scroll #app down to the last message\n        }\n    },\n    created(){\n        /* If history is enabled, the messages are retrieved from sessionStorage */\n        if (this.history() && sessionStorage.getItem('message_history') !== null){\n            this.messages = JSON.parse(sessionStorage.getItem('message_history'))\n        }\n\n        /* Session should be persistent (in case of page reload, the context should stay) */\n        if (this.history() && sessionStorage.getItem('session') !== null){\n            this.session = sessionStorage.getItem('session')\n        }\n\n        else {\n            this.session = uuidv1()\n            if (this.history()) sessionStorage.setItem('session', this.session)\n        }\n\n        /* Cache Agent (this will save bandwith) */\n        if (this.history() && sessionStorage.getItem('agent') !== null){\n            this.app = JSON.parse(sessionStorage.getItem('agent'))\n        }\n\n        else {\n            this.client.get()\n            .then(agent => {\n                this.app = agent\n                if (this.history()) sessionStorage.setItem('agent', JSON.stringify(agent))\n            })\n            .catch(error => {\n                this.error = error.message\n            })\n        }\n    },\n    methods: {\n        send(submission){\n            let request\n\n            /* Text request */\n            if (submission.text){\n                request = {\n                    session: this.session,\n                    queryInput: {\n                        text: {\n                            text: submission.text,\n                            languageCode: this.lang()\n                        }\n                    }\n                }\n            }\n\n            /* Audio request */\n            else if (submission.audio){\n                request = {\n                    session: this.session,\n                    queryInput: {\n                        audioConfig: {\n                            audioEncoding: 'AUDIO_ENCODING_UNSPECIFIED',\n                            languageCode: this.lang()\n                        }\n                    },\n                    inputAudio: submission.audio\n                }\n            }\n\n            this.loading = true\n            this.error = null\n\n            /* Make the request to gateway */\n            this.client.send(request)\n            .then(response => {\n                this.messages.push(response)\n                this.handle(response) // <- trigger the handle function (explanation below)\n                // console.log(response) // <- (optional) log responses\n            })\n            .catch(error => {\n                this.error = error.message\n            })\n            .then(() => this.loading = false)\n        },\n        handle(response){\n            /* This function is used for speech output */\n            if (response.outputAudio){\n                const output = new Audio(`data:audio/mp3;base64,${response.outputAudio}`)\n                output.onended = () => this.$refs.input.listen()\n\n                if (!this.muted) output.play()\n            }\n\n            else {\n                let text // <- init a text variable\n\n                /* Dialogflow Text/SimpleResponses */\n                for (const component in response.queryResult.fulfillmentMessages){\n                    if (response.queryResult.fulfillmentMessages[component].text) text = response.queryResult.fulfillmentMessages[component].text.text[0]\n                    if (response.queryResult.fulfillmentMessages[component].simpleResponses) text = response.queryResult.fulfillmentMessages[component].simpleResponses.simpleResponses[0].textToSpeech\n                }\n\n                /* Actions on Google Simple response */\n                if (response.queryResult.webhookPayload && response.queryResult.webhookPayload.google){\n                    for (const component in response.queryResult.webhookPayload.google){\n                        if (response.queryResult.webhookPayload.google[component].simpleResponse) text = response.queryResult.webhookPayload.google[component].simpleResponse.textToSpeech\n                    }\n                }\n\n                const speech = new SpeechSynthesisUtterance(text)\n                speech.voiceURI = this.config.voice\n\n                /* This \"hack\" is used to format our lang format, to some other lang format (example: en -> en_EN). Mainly for Safari, Firefox and Edge */\n                speech.lang = `${this.lang()}-${this.lang().toUpperCase()}`\n                if (!this.muted) window.speechSynthesis.speak(speech) // <- if app is not muted, speak out the speech\n            }\n        }\n    }\n}\n</script>"]}]}